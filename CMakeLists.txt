cmake_minimum_required(VERSION 2.6)
project(sp)
set(VERSION v2.0.2)
enable_language (Fortran)
if (NOT CMAKE_BUILD_TYPE)
    set (CMAKE_BUILD_TYPE RELEASE CACHE STRING
        "Choose the type of build, options are: PRODUCTION Debug Release."
        FORCE)
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "Intel")
  set(IntelComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU*")
  set(GNUComp true )
elseif(CMAKE_CXX_COMPILER_ID MATCHES "pgc*")
  set(PGIComp true )
endif()
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RelWithDebInfo" BUILD_RELEASE)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "RELEASE" BUILD_RELEASE)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "PRODUCTION" BUILD_PRODUCTION)
STRING(COMPARE EQUAL ${CMAKE_BUILD_TYPE} "DEBUG" BUILD_DEBUG)
if( (BUILD_RELEASE) OR (BUILD_PRODUCTION) )
  if(IntelComp)
    set(CMAKE_Fortran_4_FLAGS "-O3 -auto -qopenmp -i4 -r4 -convert big_endian -assume byterecl -fp-model strict -fpp -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-O3 -auto -qopenmp -i4 -r8 -convert big_endian -assume byterecl -fp-model strict -fpp -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_8_FLAGS "-O3 -auto -qopenmp -i8 -r8 -convert big_endian -assume byterecl -fp-model strict -fpp -DLINUX " CACHE INTERNAL "" )
  elseif(GNUComp)
    set(CMAKE_Fortran_4_FLAGS "-O3 -fopenmp -cpp -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_d_FLAGS "-O3 -fopenmp -fdefault-real-8 -cpp -DLINUX " CACHE INTERNAL "" )
    set(CMAKE_Fortran_8_FLAGS "-O3 -fopenmp -fdefault-real-8 -fdefault-integer-8 -cpp -DLINUX " CACHE INTERNAL "" )
  else()
    message("unknown compiler!")
    exit()
  endif()
endif()
add_subdirectory(4byte)
add_subdirectory(8byte)
add_subdirectory(double)
